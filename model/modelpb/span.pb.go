// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: span.proto

package modelpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type         string          `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Subtype      string          `protobuf:"bytes,3,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Action       string          `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Sync         bool            `protobuf:"varint,5,opt,name=sync,proto3" json:"sync,omitempty"`
	Stacktrace   []*Stackframe   `protobuf:"bytes,6,rep,name=stacktrace,proto3" json:"stacktrace,omitempty"`
	Experimental *structpb.Value `protobuf:"bytes,7,opt,name=experimental,proto3" json:"experimental,omitempty"`
	Message      *Message        `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Db           *SpanDatabase   `protobuf:"bytes,9,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_span_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_span_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_span_proto_rawDescGZIP(), []int{0}
}

func (x *Span) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Span) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Span) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *Span) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Span) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *Span) GetStacktrace() []*Stackframe {
	if x != nil {
		return x.Stacktrace
	}
	return nil
}

func (x *Span) GetExperimental() *structpb.Value {
	if x != nil {
		return x.Experimental
	}
	return nil
}

func (x *Span) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Span) GetDb() *SpanDatabase {
	if x != nil {
		return x.Db
	}
	return nil
}

type SpanDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *SpanDestinationService `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *SpanDestination) Reset() {
	*x = SpanDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_span_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpanDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanDestination) ProtoMessage() {}

func (x *SpanDestination) ProtoReflect() protoreflect.Message {
	mi := &file_span_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanDestination.ProtoReflect.Descriptor instead.
func (*SpanDestination) Descriptor() ([]byte, []int) {
	return file_span_proto_rawDescGZIP(), []int{1}
}

func (x *SpanDestination) GetService() *SpanDestinationService {
	if x != nil {
		return x.Service
	}
	return nil
}

type SpanDestinationService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *SpanDestinationService) Reset() {
	*x = SpanDestinationService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_span_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpanDestinationService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanDestinationService) ProtoMessage() {}

func (x *SpanDestinationService) ProtoReflect() protoreflect.Message {
	mi := &file_span_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanDestinationService.ProtoReflect.Descriptor instead.
func (*SpanDestinationService) Descriptor() ([]byte, []int) {
	return file_span_proto_rawDescGZIP(), []int{2}
}

func (x *SpanDestinationService) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type SpanDatabase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance     string `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	Statement    string `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Username     string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Link         string `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	RowsAffected int64  `protobuf:"varint,6,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
}

func (x *SpanDatabase) Reset() {
	*x = SpanDatabase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_span_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpanDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanDatabase) ProtoMessage() {}

func (x *SpanDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_span_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanDatabase.ProtoReflect.Descriptor instead.
func (*SpanDatabase) Descriptor() ([]byte, []int) {
	return file_span_proto_rawDescGZIP(), []int{3}
}

func (x *SpanDatabase) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *SpanDatabase) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *SpanDatabase) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SpanDatabase) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SpanDatabase) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SpanDatabase) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

var File_span_proto protoreflect.FileDescriptor

var file_span_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x70, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a,
	0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2,
	0x02, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e,
	0x63, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2f, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x02, 0x64, 0x62, 0x22, 0x56, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x70, 0x61, 0x6e,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x16, 0x53,
	0x70, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x6d, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_span_proto_rawDescOnce sync.Once
	file_span_proto_rawDescData = file_span_proto_rawDesc
)

func file_span_proto_rawDescGZIP() []byte {
	file_span_proto_rawDescOnce.Do(func() {
		file_span_proto_rawDescData = protoimpl.X.CompressGZIP(file_span_proto_rawDescData)
	})
	return file_span_proto_rawDescData
}

var file_span_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_span_proto_goTypes = []interface{}{
	(*Span)(nil),                   // 0: elastic.apm.model.Span
	(*SpanDestination)(nil),        // 1: elastic.apm.model.SpanDestination
	(*SpanDestinationService)(nil), // 2: elastic.apm.model.SpanDestinationService
	(*SpanDatabase)(nil),           // 3: elastic.apm.model.SpanDatabase
	(*Stackframe)(nil),             // 4: elastic.apm.model.Stackframe
	(*structpb.Value)(nil),         // 5: google.protobuf.Value
	(*Message)(nil),                // 6: elastic.apm.model.Message
}
var file_span_proto_depIdxs = []int32{
	4, // 0: elastic.apm.model.Span.stacktrace:type_name -> elastic.apm.model.Stackframe
	5, // 1: elastic.apm.model.Span.experimental:type_name -> google.protobuf.Value
	6, // 2: elastic.apm.model.Span.message:type_name -> elastic.apm.model.Message
	3, // 3: elastic.apm.model.Span.db:type_name -> elastic.apm.model.SpanDatabase
	2, // 4: elastic.apm.model.SpanDestination.service:type_name -> elastic.apm.model.SpanDestinationService
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_span_proto_init() }
func file_span_proto_init() {
	if File_span_proto != nil {
		return
	}
	file_message_proto_init()
	file_stackframe_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_span_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_span_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpanDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_span_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpanDestinationService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_span_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpanDatabase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_span_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_span_proto_goTypes,
		DependencyIndexes: file_span_proto_depIdxs,
		MessageInfos:      file_span_proto_msgTypes,
	}.Build()
	File_span_proto = out.File
	file_span_proto_rawDesc = nil
	file_span_proto_goTypes = nil
	file_span_proto_depIdxs = nil
}
