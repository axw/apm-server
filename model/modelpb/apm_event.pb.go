// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: apm_event.proto

package modelpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type APMEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Event       *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Trace       *Trace                 `protobuf:"bytes,3,opt,name=trace,proto3" json:"trace,omitempty"`
	Transaction *Transaction           `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Span        *Span                  `protobuf:"bytes,5,opt,name=span,proto3" json:"span,omitempty"`
	Metricset   *Metricset             `protobuf:"bytes,6,opt,name=metricset,proto3" json:"metricset,omitempty"`
	Parent      *Parent                `protobuf:"bytes,7,opt,name=parent,proto3" json:"parent,omitempty"`
	Agent       *Agent                 `protobuf:"bytes,8,opt,name=agent,proto3" json:"agent,omitempty"`
	Client      *Client                `protobuf:"bytes,9,opt,name=client,proto3" json:"client,omitempty"`
	Cloud       *Cloud                 `protobuf:"bytes,10,opt,name=cloud,proto3" json:"cloud,omitempty"`
	Container   *Container             `protobuf:"bytes,11,opt,name=container,proto3" json:"container,omitempty"`
	Host        *Host                  `protobuf:"bytes,12,opt,name=host,proto3" json:"host,omitempty"`
	Kubernetes  *Kubernetes            `protobuf:"bytes,13,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	Labels      map[string]*LabelValue `protobuf:"bytes,14,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Process     *Process               `protobuf:"bytes,15,opt,name=process,proto3" json:"process,omitempty"`
	Service     *Service               `protobuf:"bytes,16,opt,name=service,proto3" json:"service,omitempty"`
	Session     *Session               `protobuf:"bytes,17,opt,name=session,proto3" json:"session,omitempty"`
	User        *User                  `protobuf:"bytes,18,opt,name=user,proto3" json:"user,omitempty"`
	UserAgent   *UserAgent             `protobuf:"bytes,19,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Http        *HTTP                  `protobuf:"bytes,20,opt,name=http,proto3" json:"http,omitempty"`
	Url         *URL                   `protobuf:"bytes,21,opt,name=url,proto3" json:"url,omitempty"`
	Child       *Child                 `protobuf:"bytes,22,opt,name=child,proto3" json:"child,omitempty"`
	Error       *Error                 `protobuf:"bytes,23,opt,name=error,proto3" json:"error,omitempty"`
	DataStream  *DataStream            `protobuf:"bytes,25,opt,name=data_stream,json=dataStream,proto3" json:"data_stream,omitempty"`
}

func (x *APMEvent) Reset() {
	*x = APMEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apm_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APMEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APMEvent) ProtoMessage() {}

func (x *APMEvent) ProtoReflect() protoreflect.Message {
	mi := &file_apm_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APMEvent.ProtoReflect.Descriptor instead.
func (*APMEvent) Descriptor() ([]byte, []int) {
	return file_apm_event_proto_rawDescGZIP(), []int{0}
}

func (x *APMEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *APMEvent) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *APMEvent) GetTrace() *Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *APMEvent) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *APMEvent) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

func (x *APMEvent) GetMetricset() *Metricset {
	if x != nil {
		return x.Metricset
	}
	return nil
}

func (x *APMEvent) GetParent() *Parent {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *APMEvent) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *APMEvent) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *APMEvent) GetCloud() *Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *APMEvent) GetContainer() *Container {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *APMEvent) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *APMEvent) GetKubernetes() *Kubernetes {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *APMEvent) GetLabels() map[string]*LabelValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *APMEvent) GetProcess() *Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *APMEvent) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *APMEvent) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *APMEvent) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *APMEvent) GetUserAgent() *UserAgent {
	if x != nil {
		return x.UserAgent
	}
	return nil
}

func (x *APMEvent) GetHttp() *HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *APMEvent) GetUrl() *URL {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *APMEvent) GetChild() *Child {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *APMEvent) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *APMEvent) GetDataStream() *DataStream {
	if x != nil {
		return x.DataStream
	}
	return nil
}

var File_apm_event_proto protoreflect.FileDescriptor

var file_apm_event_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x70, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x70, 0x61, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdb, 0x0a, 0x0a, 0x08, 0x41, 0x50, 0x4d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52,
	0x04, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x65, 0x74, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x65,
	0x74, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x61,
	0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x12,
	0x3f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x50, 0x4d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x3b, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04,
	0x68, 0x74, 0x74, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6c, 0x61,
	0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48,
	0x54, 0x54, 0x50, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x52, 0x4c, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x1a, 0x58, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2d, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x2f, 0x61, 0x70, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apm_event_proto_rawDescOnce sync.Once
	file_apm_event_proto_rawDescData = file_apm_event_proto_rawDesc
)

func file_apm_event_proto_rawDescGZIP() []byte {
	file_apm_event_proto_rawDescOnce.Do(func() {
		file_apm_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_apm_event_proto_rawDescData)
	})
	return file_apm_event_proto_rawDescData
}

var file_apm_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_apm_event_proto_goTypes = []interface{}{
	(*APMEvent)(nil),              // 0: elastic.apm.model.APMEvent
	nil,                           // 1: elastic.apm.model.APMEvent.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*Event)(nil),                 // 3: elastic.apm.model.Event
	(*Trace)(nil),                 // 4: elastic.apm.model.Trace
	(*Transaction)(nil),           // 5: elastic.apm.model.Transaction
	(*Span)(nil),                  // 6: elastic.apm.model.Span
	(*Metricset)(nil),             // 7: elastic.apm.model.Metricset
	(*Parent)(nil),                // 8: elastic.apm.model.Parent
	(*Agent)(nil),                 // 9: elastic.apm.model.Agent
	(*Client)(nil),                // 10: elastic.apm.model.Client
	(*Cloud)(nil),                 // 11: elastic.apm.model.Cloud
	(*Container)(nil),             // 12: elastic.apm.model.Container
	(*Host)(nil),                  // 13: elastic.apm.model.Host
	(*Kubernetes)(nil),            // 14: elastic.apm.model.Kubernetes
	(*Process)(nil),               // 15: elastic.apm.model.Process
	(*Service)(nil),               // 16: elastic.apm.model.Service
	(*Session)(nil),               // 17: elastic.apm.model.Session
	(*User)(nil),                  // 18: elastic.apm.model.User
	(*UserAgent)(nil),             // 19: elastic.apm.model.UserAgent
	(*HTTP)(nil),                  // 20: elastic.apm.model.HTTP
	(*URL)(nil),                   // 21: elastic.apm.model.URL
	(*Child)(nil),                 // 22: elastic.apm.model.Child
	(*Error)(nil),                 // 23: elastic.apm.model.Error
	(*DataStream)(nil),            // 24: elastic.apm.model.DataStream
	(*LabelValue)(nil),            // 25: elastic.apm.model.LabelValue
}
var file_apm_event_proto_depIdxs = []int32{
	2,  // 0: elastic.apm.model.APMEvent.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 1: elastic.apm.model.APMEvent.event:type_name -> elastic.apm.model.Event
	4,  // 2: elastic.apm.model.APMEvent.trace:type_name -> elastic.apm.model.Trace
	5,  // 3: elastic.apm.model.APMEvent.transaction:type_name -> elastic.apm.model.Transaction
	6,  // 4: elastic.apm.model.APMEvent.span:type_name -> elastic.apm.model.Span
	7,  // 5: elastic.apm.model.APMEvent.metricset:type_name -> elastic.apm.model.Metricset
	8,  // 6: elastic.apm.model.APMEvent.parent:type_name -> elastic.apm.model.Parent
	9,  // 7: elastic.apm.model.APMEvent.agent:type_name -> elastic.apm.model.Agent
	10, // 8: elastic.apm.model.APMEvent.client:type_name -> elastic.apm.model.Client
	11, // 9: elastic.apm.model.APMEvent.cloud:type_name -> elastic.apm.model.Cloud
	12, // 10: elastic.apm.model.APMEvent.container:type_name -> elastic.apm.model.Container
	13, // 11: elastic.apm.model.APMEvent.host:type_name -> elastic.apm.model.Host
	14, // 12: elastic.apm.model.APMEvent.kubernetes:type_name -> elastic.apm.model.Kubernetes
	1,  // 13: elastic.apm.model.APMEvent.labels:type_name -> elastic.apm.model.APMEvent.LabelsEntry
	15, // 14: elastic.apm.model.APMEvent.process:type_name -> elastic.apm.model.Process
	16, // 15: elastic.apm.model.APMEvent.service:type_name -> elastic.apm.model.Service
	17, // 16: elastic.apm.model.APMEvent.session:type_name -> elastic.apm.model.Session
	18, // 17: elastic.apm.model.APMEvent.user:type_name -> elastic.apm.model.User
	19, // 18: elastic.apm.model.APMEvent.user_agent:type_name -> elastic.apm.model.UserAgent
	20, // 19: elastic.apm.model.APMEvent.http:type_name -> elastic.apm.model.HTTP
	21, // 20: elastic.apm.model.APMEvent.url:type_name -> elastic.apm.model.URL
	22, // 21: elastic.apm.model.APMEvent.child:type_name -> elastic.apm.model.Child
	23, // 22: elastic.apm.model.APMEvent.error:type_name -> elastic.apm.model.Error
	24, // 23: elastic.apm.model.APMEvent.data_stream:type_name -> elastic.apm.model.DataStream
	25, // 24: elastic.apm.model.APMEvent.LabelsEntry.value:type_name -> elastic.apm.model.LabelValue
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_apm_event_proto_init() }
func file_apm_event_proto_init() {
	if File_apm_event_proto != nil {
		return
	}
	file_agent_proto_init()
	file_child_proto_init()
	file_client_proto_init()
	file_cloud_proto_init()
	file_common_proto_init()
	file_container_proto_init()
	file_datastream_proto_init()
	file_error_proto_init()
	file_event_proto_init()
	file_host_proto_init()
	file_http_proto_init()
	file_kubernetes_proto_init()
	file_metricset_proto_init()
	file_parent_proto_init()
	file_process_proto_init()
	file_service_proto_init()
	file_session_proto_init()
	file_span_proto_init()
	file_trace_proto_init()
	file_transaction_proto_init()
	file_url_proto_init()
	file_user_proto_init()
	file_useragent_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_apm_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APMEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apm_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apm_event_proto_goTypes,
		DependencyIndexes: file_apm_event_proto_depIdxs,
		MessageInfos:      file_apm_event_proto_msgTypes,
	}.Build()
	File_apm_event_proto = out.File
	file_apm_event_proto_rawDesc = nil
	file_apm_event_proto_goTypes = nil
	file_apm_event_proto_depIdxs = nil
}
